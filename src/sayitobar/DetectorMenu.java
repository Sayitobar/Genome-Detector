package sayitobar;

import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author mac
 */
public class DetectorMenu extends javax.swing.JFrame {

    /**
     * Creates new form MainMenu
     */
    public DetectorMenu() {
        initComponents();
        
        // Set outputFile location
        outPathLoc.setText(System.getProperty("user.home") + "/Desktop");
        
        // Window location
        setLocation(GenomeDetector.WinX - getWidth()/2, GenomeDetector.WinY - getHeight()/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Title = new javax.swing.JLabel();
        searchButton = new javax.swing.JToggleButton();
        patientFileLoc = new javax.swing.JTextField();
        selectPatientButton = new javax.swing.JButton();
        selectGenePoolButton = new javax.swing.JButton();
        genePoolFileLoc = new javax.swing.JTextField();
        outFileName = new javax.swing.JTextField();
        outFileLabel = new javax.swing.JLabel();
        outPathLoc = new javax.swing.JTextField();
        selectOutputPathButton = new javax.swing.JButton();
        outPathLabel = new javax.swing.JLabel();
        patientFileLabel = new javax.swing.JLabel();
        genePoolFileLabel = new javax.swing.JLabel();
        infoButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        backButton = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        Title.setFont(new java.awt.Font("Futura", 0, 24)); // NOI18N
        Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Title.setText("Gene Detector");

        searchButton.setText("Search for occurrences");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        patientFileLoc.setEditable(false);
        patientFileLoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientFileLocActionPerformed(evt);
            }
        });

        selectPatientButton.setIcon(javax.swing.UIManager.getIcon("FileChooser.directoryIcon"));
        selectPatientButton.setToolTipText("");
        selectPatientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectPatientButtonActionPerformed(evt);
            }
        });

        selectGenePoolButton.setIcon(javax.swing.UIManager.getIcon("FileChooser.directoryIcon"));
        selectGenePoolButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectGenePoolButtonActionPerformed(evt);
            }
        });

        genePoolFileLoc.setEditable(false);
        genePoolFileLoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genePoolFileLocActionPerformed(evt);
            }
        });

        outFileName.setToolTipText("");
        outFileName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outFileNameActionPerformed(evt);
            }
        });

        outFileLabel.setText("Name of output file (.xlsx):");

        outPathLoc.setEditable(false);
        outPathLoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outPathLocActionPerformed(evt);
            }
        });

        selectOutputPathButton.setIcon(javax.swing.UIManager.getIcon("FileChooser.directoryIcon"));
        selectOutputPathButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectOutputPathButtonActionPerformed(evt);
            }
        });

        outPathLabel.setText("Select output folder (where to store it):");

        patientFileLabel.setText("Select patient's gene file (.xlsx):");

        genePoolFileLabel.setText("Select your gene pool file (.xlsx):");

        infoButton.setFont(new java.awt.Font("Helvetica Neue", 0, 10)); // NOI18N
        javax.swing.Icon icon = javax.swing.UIManager.getIcon("OptionPane.informationIcon");
        java.awt.image.BufferedImage bufferedImage = new java.awt.image.BufferedImage(icon.getIconWidth(), icon.getIconHeight(), java.awt.image.BufferedImage.TYPE_INT_ARGB);
        java.awt.Graphics2D g_ = bufferedImage.createGraphics();
        icon.paintIcon(null, g_, 0, 0);
        g_.dispose();
        javax.swing.Icon icon_ = new javax.swing.ImageIcon(bufferedImage.getScaledInstance(16, 16, java.awt.Image.SCALE_SMOOTH));
        infoButton.setIcon(icon_);
        infoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infoButtonActionPerformed(evt);
            }
        });

        backButton.setIcon(javax.swing.UIManager.getIcon("FileChooser.homeFolderIcon"));
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(selectGenePoolButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(genePoolFileLabel)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(genePoolFileLoc)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(selectOutputPathButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(outFileLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(outFileName, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(outPathLabel)
                            .addComponent(outPathLoc, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(selectPatientButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(patientFileLoc)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(patientFileLabel))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Title, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(129, 129, 129)))))
                .addGap(7, 7, 7)
                .addComponent(infoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(182, 182, 182)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Title)
                    .addComponent(infoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(patientFileLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectPatientButton)
                    .addComponent(patientFileLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(genePoolFileLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectGenePoolButton)
                    .addComponent(genePoolFileLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(outPathLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(selectOutputPathButton)
                    .addComponent(outPathLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outFileName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(outFileLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchButton)
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        if ("".equals(patientFileLoc.getText()) || "".equals(genePoolFileLoc.getText()) || "".equals(outFileName.getText()) || "".equals(outPathLoc.getText())) {
            // if any places empty, do not run it.
            return;
        }

        setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        
        try {
            GenomeDetector.start_detector(
                    patientFileLoc.getText(),
                    genePoolFileLoc.getText(),
                    outPathLoc.getText(),
                    "/" + outFileName.getText()
            );
            setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            javax.swing.JOptionPane.showMessageDialog(this, "File successfully generated:\n" + outPathLoc.getText() + "/" + outFileName.getText(), "Success", 1);

        } catch (Exception e) {  // IOException doesn't work here, trust me
            System.out.println("Couldn't start GenomeDetector.start(): " + e);
            
            setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            javax.swing.JOptionPane.showMessageDialog(this, "Search failed: One of the files are faulty.\n\nPlease click (?) on the right corner of the\nscreen to see the rules of input excel files. \nPlease fix the formatting and try again.", "Search failed", 2);
        }
        
        // dispose();
        // System.exit(0);  // exit on task accompilation
    }//GEN-LAST:event_searchButtonActionPerformed

    private void patientFileLocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientFileLocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patientFileLocActionPerformed

    private void genePoolFileLocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genePoolFileLocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genePoolFileLocActionPerformed

    private void selectGenePoolButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectGenePoolButtonActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home") + "/Desktop/"));
        fileChooser.setFileFilter(new FileNameExtensionFilter("Excel File (2013-)", "xlsx"));
        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.setDialogTitle("Select desired gene pool file");

        int response = fileChooser.showDialog(this, "Select");
        
        if (response == JFileChooser.APPROVE_OPTION) {
            String filePath = fileChooser.getSelectedFile().getAbsolutePath();
            genePoolFileLoc.setText(filePath);
        }
    }//GEN-LAST:event_selectGenePoolButtonActionPerformed

    private void outFileNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outFileNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_outFileNameActionPerformed

    private void outPathLocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outPathLocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_outPathLocActionPerformed

    private void selectOutputPathButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectOutputPathButtonActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home") + "/Desktop/"));
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.setDialogTitle("Select output folder");

        int response = fileChooser.showDialog(this, "Select");
        
        if (response == JFileChooser.APPROVE_OPTION) {
            String filePath = fileChooser.getSelectedFile().getAbsolutePath();
            
            outPathLoc.setText(filePath);
        }

    }//GEN-LAST:event_selectOutputPathButtonActionPerformed

    private void selectPatientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectPatientButtonActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home") + "/Desktop/"));
        fileChooser.setFileFilter(new FileNameExtensionFilter("Excel File (2013-)", "xlsx"));
        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.setDialogTitle("Select patient genes file");
        
        int response = fileChooser.showDialog(this, "Select");
        
        if (response == JFileChooser.APPROVE_OPTION) {
            String filePath = fileChooser.getSelectedFile().getAbsolutePath();
            
            patientFileLoc.setText(filePath);
            
            outFileName.setText("OUTPUT-" + filePath.split("/")[filePath.split("/").length-1]);
        }
    }//GEN-LAST:event_selectPatientButtonActionPerformed

    
    public void close() {
        WindowEvent closeWin = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeWin);
    }
     
    private void infoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infoButtonActionPerformed
        System.out.println("Opening info window");
        
        GenomeDetector.WinX = getX() + getWidth() /2;
        GenomeDetector.WinY = getY() + getHeight()/2;
        
        close();
        infoWindow.wakeup();
    }//GEN-LAST:event_infoButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // go to home screen
        System.out.println("Back to home menu");
        
        GenomeDetector.WinX = getX() + getWidth() /2;
        GenomeDetector.WinY = getY() + getHeight()/2;
        
        close();
        MainMenu.wakeup();
    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void wakeup() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(infoWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new DetectorMenu().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Title;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel genePoolFileLabel;
    private javax.swing.JTextField genePoolFileLoc;
    private javax.swing.JButton infoButton;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel outFileLabel;
    private javax.swing.JTextField outFileName;
    private javax.swing.JLabel outPathLabel;
    private javax.swing.JTextField outPathLoc;
    private javax.swing.JLabel patientFileLabel;
    private javax.swing.JTextField patientFileLoc;
    private javax.swing.JToggleButton searchButton;
    private javax.swing.JButton selectGenePoolButton;
    private javax.swing.JButton selectOutputPathButton;
    private javax.swing.JButton selectPatientButton;
    // End of variables declaration//GEN-END:variables
}
